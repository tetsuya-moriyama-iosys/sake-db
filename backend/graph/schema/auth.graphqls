input RegisterInput {
  name: String!
  email: String!
  password: String #新規と登録の差分はロジックで吸収する
  profile: String
  imageBase64: String
}

input LoginInput {
  email: String!
  password: String!
}

# ログイン時に返ってくるデータ
type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  name: String!
  email: String!
  profile: String
  imageBase64: String     # 縮小された画像のBase64エンコードデータ
}

extend type Query {
  getUser: User! @auth
}


extend type Mutation {
  registerUser(input: RegisterInput!): User!
  updateUser(input: RegisterInput!): Boolean! @auth
  login(input: LoginInput!): AuthPayload!
}
