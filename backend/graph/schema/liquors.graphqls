scalar DateTime

type CategoryTrail {
  id:Int!
  name:String!
}

type Liquor {
  id: String!
  categoryId: Int!
  categoryName: String!
  categoryTrail:[CategoryTrail!]
  name: String!
  description: String
  imageUrl: String        # S3に保存された画像のURL
  imageBase64: String     # 縮小された画像のBase64エンコードデータ
  createdAt: DateTime!
  updatedAt: DateTime!
  rate5Users: [ID!]!
  rate4Users: [ID!]!
  rate3Users: [ID!]!
  rate2Users: [ID!]!
  rate1Users: [ID!]!
  versionNo: Int!
}

type ListFromCategory{
  categoryName:String!
  categoryDescription:String
  liquors:[Liquor]!
}

type LiquorHistory{
  now:Liquor!
  histories:[Liquor]
}

type BoardPost{
 id:ID!
 name: String
 userId: String
 text: String!
 rate: Int
 createdAt: DateTime!
 updatedAt: DateTime!
}

input BoardInput{
  liquorID: String!
  text: String!
  rate: Int
}

extend type Query {
  liquor(id: String!): Liquor!
  randomRecommendList(limit: Int!): [Liquor!]! #ランダムなリスト
  listFromCategory(categoryId: Int!): ListFromCategory! #カテゴリで絞り込んだリスト
  liquorHistories(id: String!):LiquorHistory
  board(liquorId: String!,page:Int):[BoardPost!]
  getMyBoard(liquorId: String!):BoardPost @optionalAuth #未ログイン時にも呼ばれるのでoptionalに
}

extend type Mutation{
  postBoard(input: BoardInput!):Boolean! @optionalAuth
}