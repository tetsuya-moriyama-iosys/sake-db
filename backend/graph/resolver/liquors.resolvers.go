package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"backend/graph/collections"
	"backend/graph/model"
	"context"
	"fmt"
	"log"
	"time"

	"go.mongodb.org/mongo-driver/bson/primitive"
)

// CreateLiquor is the resolver for the createLiquor field.
func (r *mutationResolver) CreateLiquor(ctx context.Context, inputs model.CreateLiquorRequest) (*model.Liquor, error) {
	// リクエスト内容をログ出力（デバッグ用）
	log.Printf("CreateLiquor called with inputs: %+v\n", inputs)

	now := time.Now()
	log.Println("CreateLiquor inputs:", inputs)
	liquor := &model.Liquor{
		ID:          primitive.NewObjectID().Hex(),
		CategoryID:  inputs.CategoryID,
		Name:        inputs.Name,
		Description: inputs.Description,
		CreatedAt:   now,
		UpdatedAt:   now,
	}

	log.Println("モデル生成：", *liquor)
	_, err := collections.Liquors().InsertOne(ctx, *liquor)

	if err != nil {
		log.Printf("Error inserting liquor: %v", err) // エラーハンドリングの追加
		return nil, err
	}
	log.Printf("Liquor successfully created: %+v\n", liquor)
	return liquor, nil
}

// Liquors is the resolver for the liquors field.
func (r *queryResolver) Liquors(ctx context.Context) ([]*model.Liquor, error) {
	panic(fmt.Errorf("not implemented: Liquors - liquors"))
}

// Liquor is the resolver for the liquor field.
func (r *queryResolver) Liquor(ctx context.Context, id int) (*model.Liquor, error) {
	panic(fmt.Errorf("not implemented: Liquor - liquor"))
}
