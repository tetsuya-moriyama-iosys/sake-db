package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.70

import (
	"backend/graph/graphModel"
	"backend/middlewares/auth"
	"backend/middlewares/customError"
	"backend/service/myPageService"
	"context"
)

// UpdateUser is the resolver for the updateUser field.
func (r *mutationResolver) UpdateUser(ctx context.Context, input graphModel.RegisterInput) (bool, *customError.Error) {
	return myPageService.UpdateUser(ctx, r.UserRepo, input)
}

// GetMyData is the resolver for the getMyData field.
func (r *queryResolver) GetMyData(ctx context.Context) (*graphModel.User, *customError.Error) {
	uId, err := auth.GetId(ctx)
	if err != nil {
		return nil, err
	}

	// ユーザー情報をデータベースから取得する処理
	user, err := r.UserRepo.GetById(ctx, uId)
	if err != nil {
		return nil, err
	}

	return user.ToGraphQL(), nil
}
